version: '2'
services:
  mariadb:
    image: wodby/mariadb:10.1-2.3.5
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: symfony
      MYSQL_USER: symfony
      MYSQL_PASSWORD: symfony
    volumes:
      #- ./some.sql:/docker-entrypoint-initdb.d
      - mysql-data:/var/lib/mysql
    ports:
      - "3306:3306"

  php:
    image: divined/symfony-php
    environment:
      PHP_SENDMAIL_PATH: /usr/sbin/sendmail -t -i -S mailhog:1025
      PHP_FPM_CLEAR_ENV: "no"
      PHP_APCU_ENABLED: 1
      PHP_APCU_SHM_SIZE: 128M
      PHP_ERROR_REPORTING: "E_ALL | E_STRICT"
      DB_HOST: mariadb
      DB_USER: symfony
      DB_PASSWORD: symfony
      DB_NAME: symfony
      DB_DRIVER: mysql
#      PHP_XDEBUG: 1
#      PHP_XDEBUG_DEFAULT_ENABLE: 1
#      PHP_XDEBUG_REMOTE_CONNECT_BACK: 0
#      PHP_XDEBUG_REMOTE_HOST: "10.0.75.1"
#      PHP_XDEBUG_PROFILER_ENABLE_TRIGGER: 1
#      PHP_XDEBUG_PROFILER_OUTPUT_DIR: /mnt/files/xdebug/profiler
#      PHP_XDEBUG_TRACE_OUTPUT_DIR: /mnt/files/xdebug/traces
    volumes:
      - ./:/var/www/html

  nginx:
      image: divined/symfony-nginx
      depends_on:
        - php
      links:
        - php
      environment:
        NGINX_STATIC_CONTENT_OPEN_FILE_CACHE: "off"
        NGINX_ERROR_LOG_LEVEL: debug
        NGINX_BACKEND_HOST: php
        NGINX_SERVER_ROOT: /var/www/html/public
      volumes:
        - ./:/var/www/html
      labels:
        - 'traefik.backend=nginx'
        - 'traefik.port=80'
        - 'traefik.frontend.rule=Host:localhost'

  mailhog:
    image: mailhog/mailhog
    labels:
      - 'traefik.backend=mailhog'
      - 'traefik.port=8025'
      - 'traefik.frontend.rule=Host:mailhog.localhost'

  portainer:
    image: portainer/portainer
    command: --no-auth -H unix:///var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - 'traefik.backend=portainer'
      - 'traefik.port=9000'
      - 'traefik.frontend.rule=Host:portainer.localhost'

  traefik:
    image: traefik
    command: -c /dev/null --web --docker --logLevel=INFO
    ports:
      - '8080:80'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

volumes:
   mysql-data:
